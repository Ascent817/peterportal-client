name: CI/CD

on:
  push:
    branches:
      - master
      - migrate-gh-pages

jobs:
  frontend:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    env:
      # need to set to false, otherwise react warnings will be treated as errors
      CI: false

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v3
        
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'

      - name: Install and Build 🔧 
        run: |
          cd site
          npm install --legacy-peer-deps
          npm run build

      - name: Deploy 🚀
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: site/build # The folder the action should deploy.

  backend:
    runs-on: ubuntu-latest
    env:
      PUBLIC_API_URL: ${{secrets.PUBLIC_API_URL}}
      PUBLIC_API_GRAPHQL_URL: ${{secrets.PUBLIC_API_GRAPHQL_URL}}
      PETERPORTAL_MAIN_ES: ${{secrets.PETERPORTAL_MAIN_ES}}
      MONGO_URL: ${{secrets.MONGO_URL}}
      PPAPI_KEY: ${{secrets.PPAPI_KEY}}
      SESSION_SECRET: ${{secrets.SESSION_SECRET}}
      GOOGLE_CLIENT: ${{secrets.GOOGLE_CLIENT}}
      GOOGLE_SECRET: ${{secrets.GOOGLE_SECRET}}
      ADMIN_EMAILS: ${{secrets.ADMIN_EMAILS}}
      PRODUCTION_DOMAIN: ${{secrets.PRODUCTION_DOMAIN}}
      PORT: ${{secrets.PORT}}

    steps:
      - name: Check Out Repo
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'

      - name: Dump Environment Variables
        run: |
          cd api && printf "PUBLIC_API_URL=$PUBLIC_API_URL\n \
            PUBLIC_API_GRAPHQL_URL=$PUBLIC_API_GRAPHQL_URL\n \
            PETERPORTAL_MAIN_ES=$PETERPORTAL_MAIN_ES\n \
            MONGO_URL=$MONGO_URL\n \
            PPAPI_KEY=$PPAPI_KEY\n \
            SESSION_SECRET=$SESSION_SECRET\n \
            GOOGLE_CLIENT=$GOOGLE_CLIENT\n \
            GOOGLE_SECRET=$GOOGLE_SECRET\n \
            ADMIN_EMAILS=$ADMIN_EMAILS\n \
            PRODUCTION_DOMAIN=$PRODUCTION_DOMAIN\n \
            PORT=$PORT" > .env

      - name: Install and Build 🔧 
        run: |
          cd api
          npm install
          npm run build

      - name: Install Plugin and Deploy
        uses: serverless/github-action@v3.1
        with:
          args: -c "cd api serverless plugin install --name serverless-dotenv-plugin && serverless deploy"
          entrypoint: /bin/sh
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}