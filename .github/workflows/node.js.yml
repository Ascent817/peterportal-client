name: CI/CD

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  deployAWS:
    runs-on: ubuntu-latest
    env:
      # need to set to false, otherwise react warnings will be treated as errors
      CI: false
      PUBLIC_API_URL: ${{secrets.PUBLIC_API_URL}}
      PUBLIC_API_GRAPHQL_URL: ${{secrets.PUBLIC_API_GRAPHQL_URL}}
      PETERPORTAL_MAIN_ES: ${{secrets.PETERPORTAL_MAIN_ES}}
      MONGO_URL: ${{secrets.MONGO_URL}}
      PPAPI_KEY: ${{secrets.PPAPI_KEY}}
      SESSION_SECRET: ${{secrets.SESSION_SECRET}}
      GOOGLE_CLIENT: ${{secrets.GOOGLE_CLIENT}}
      GOOGLE_SECRET: ${{secrets.GOOGLE_SECRET}}
      PRODUCTION_DOMAIN: ${{secrets.PRODUCTION_DOMAIN}}
      PORT: ${{secrets.PORT}}

    steps:
      - name: Check Out Repo
        uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '16'
          cache: 'npm'

      - name: Dump Environment Variables
        run: |
          cd api && printf "PUBLIC_API_URL=$PUBLIC_API_URL\n \
            PUBLIC_API_GRAPHQL_URL=$PUBLIC_API_GRAPHQL_URL\n \
            PETERPORTAL_MAIN_ES=$PETERPORTAL_MAIN_ES\n \
            MONGO_URL=$MONGO_URL\n \
            PPAPI_KEY=$PPAPI_KEY\n \
            SESSION_SECRET=$SESSION_SECRET\n \
            GOOGLE_CLIENT=$GOOGLE_CLIENT\n \
            GOOGLE_SECRET=$GOOGLE_SECRET\n \
            PRODUCTION_DOMAIN=$PRODUCTION_DOMAIN\n \
            PORT=$PORT" > .env

      - name: Install Dependencies
        run: |
          npm run postinstall

      - name: Build Frontend and Backend
        run: |
          npm run heroku-postbuild

      - name: Deploy to Serverless
        uses: serverless/github-action@v1.53.0
        with:
          args: -c "cd api && ls -a && cat .env && serverless deploy"
          entrypoint: /bin/bash
        env:
          AWS_ACCESS_KEY_ID:  ${{secrets.AWS_ACCESS_KEY_ID}}
          AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          SLS_DEBUG: 1      

  deployHeroku:
    runs-on: ubuntu-latest
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v2
        
      - name: Deploy to heroku
        uses: akhileshns/heroku-deploy@v3.12.12 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "peterportal" #Must be unique in Heroku
          heroku_email: "peterportal.dev@gmail.com"
